name: GitHub iOS Build
on: push
env:
  WORKSPACE: 'ios/Townscup.xcworkspace'
  SCHEME: 'TownsCup (Development)'
  CONFIGURATION: 'Debug'
  ARCHIVE_PATH: 'build/Townscup.xcarchive'
  EXPORT_PATH: 'development/'
  PLIST_PATH: 'ios/townscup_reactnative/Info.plist'
  APP_CENTER_TOKEN: '1f6f52337adfee3e501ec12f50dd902a1d3f7217'
  ARTIFACT_NAME: 'TownsCup.ipa'
  ARTIFACT_PATH: 'development/'
  APP_NAME: 'makani20/TownsCup-iOS-dev'
  TESTING_GROUP: 'Collaborators'
  UPLOAD_FILE: 'development/TownsCup.ipa'
  DEVELOPMENT_CERTIFICATE: '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'
  CERTIFICATE_PASSWORD: '1234'
  DEVELOPMENT_PROFILE: 'MIJBcwYJKoZIhvcNAQcCoIJBZDCCQWACAQExCzAJBgUrDgMCGgUAMIIxgAYJKoZIhvcNAQcBoIIxcQSCMW08P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCI/Pgo8IURPQ1RZUEUgcGxpc3QgUFVCTElDICItLy9BcHBsZS8vRFREIFBMSVNUIDEuMC8vRU4iICJodHRwOi8vd3d3LmFwcGxlLmNvbS9EVERzL1Byb3BlcnR5TGlzdC0xLjAuZHRkIj4KPHBsaXN0IHZlcnNpb249IjEuMCI+CjxkaWN0PgoJPGtleT5BcHBJRE5hbWU8L2tleT4KCTxzdHJpbmc+VG93biBDdXAgQXBwPC9zdHJpbmc+Cgk8a2V5PkFwcGxpY2F0aW9uSWRlbnRpZmllclByZWZpeDwva2V5PgoJPGFycmF5PgoJPHN0cmluZz5BNzM0TUo3Q1BTPC9zdHJpbmc+Cgk8L2FycmF5PgoJPGtleT5DcmVhdGlvbkRhdGU8L2tleT4KCTxkYXRlPjIwMjItMDgtMThUMDk6Mjc6MTlaPC9kYXRlPgoJPGtleT5QbGF0Zm9ybTwva2V5PgoJPGFycmF5PgoJCTxzdHJpbmc+aU9TPC9zdHJpbmc+Cgk8L2FycmF5PgoJPGtleT5Jc1hjb2RlTWFuYWdlZDwva2V5PgoJPGZhbHNlLz4KCTxrZXk+RGV2ZWxvcGVyQ2VydGlmaWNhdGVzPC9rZXk+Cgk8YXJyYXk+CgkJPGRhdGE+TUlJRnhEQ0NCS3lnQXdJQkFnSVFXemZXTXUwak1NZnJxM1JGRExoTGpUQU5CZ2txaGtpRzl3MEJBUXNGQURCMU1VUXdRZ1lEVlFRREREdEJjSEJzWlNCWGIzSnNaSGRwWkdVZ1JHVjJaV3h2Y0dWeUlGSmxiR0YwYVc5dWN5QkRaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwZVRFTE1Ba0dBMVVFQ3d3Q1J6TXhFekFSQmdOVkJBb01Da0Z3Y0d4bElFbHVZeTR4Q3pBSkJnTlZCQVlUQWxWVE1CNFhEVEl5TURneE56QTRNVGd6T1ZvWERUSXpNRGd4TnpBNE1UZ3pPRm93Z1lveEdqQVlCZ29Ka2lhSmsvSXNaQUVCREFvek5VaFVUVGRIVWxCRU1UUXdNZ1lEVlFRRERDdEJjSEJzWlNCRVpYWmxiRzl3YldWdWREb2dTblZ1WjJoNWRXNGdSM1VnS0V3eVVVbzFWelUwV1U0cE1STXdFUVlEVlFRTERBcEJOek0wVFVvM1ExQlRNUlF3RWdZRFZRUUtEQXRLZFc1bmFIbDFiaUJIZFRFTE1Ba0dBMVVFQmhNQ1ZWTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDMjJZelZkc2o5Q2s3OUVORmpEdFBwci9CRTlUaDdNME5tOGgvWjFPc2p4c3AxS0ROVS9QY0h4c0VVT3FMSHhVVTZzdDlJWXRFSExlL0s4dEVkT3VjWWdEekk4bitnWkVPT2p3UDdiYWdrZXhGMk9ReWJzNzU1alc1U2R2L3A4aGM3SnZJVnpRdUJvbUlQelduTlVPVWhxUlR4Y29iTWRYS3ZpeitKcGhkcXB3RkdZa2EzZkJzZGxuM2l4R1NvT09vU3A2Vnc3ZnpCS2xtWnlzZCt1bG9LRHNOcE1yRUlmY2dGTG4vMWRpVWgzT3JjOGxSNHNHaStJYWNabTNHSnpxOEVjRXdiMFI5UnJEMDgwZmNTVkVlMjNvTEhURk5TdXJod09uOHljV0Frb0pnOTZtTFcyajdGaUpQNjlwSEk1V1Q0NXNDVXROcG8ya05kWDNBc1k3a0xBZ01CQUFHamdnSTRNSUlDTkRBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkFuK3dCV1ErYTlrQ3BJU3VTWW9Zd3lYN0tleU1IQUdDQ3NHQVFVRkJ3RUJCR1F3WWpBdEJnZ3JCZ0VGQlFjd0FvWWhhSFIwY0RvdkwyTmxjblJ6TG1Gd2NHeGxMbU52YlM5M2QyUnlaek11WkdWeU1ERUdDQ3NHQVFVRkJ6QUJoaVZvZEhSd09pOHZiMk56Y0M1aGNIQnNaUzVqYjIwdmIyTnpjREF6TFhkM1pISm5NekEwTUlJQkhnWURWUjBnQklJQkZUQ0NBUkV3Z2dFTkJna3Foa2lHOTJOa0JRRXdnZjh3Z2NNR0NDc0dBUVVGQndJQ01JRzJESUd6VW1Wc2FXRnVZMlVnYjI0Z2RHaHBjeUJqWlhKMGFXWnBZMkYwWlNCaWVTQmhibmtnY0dGeWRIa2dZWE56ZFcxbGN5QmhZMk5sY0hSaGJtTmxJRzltSUhSb1pTQjBhR1Z1SUdGd2NHeHBZMkZpYkdVZ2MzUmhibVJoY21RZ2RHVnliWE1nWVc1a0lHTnZibVJwZEdsdmJuTWdiMllnZFhObExDQmpaWEowYVdacFkyRjBaU0J3YjJ4cFkza2dZVzVrSUdObGNuUnBabWxqWVhScGIyNGdjSEpoWTNScFkyVWdjM1JoZEdWdFpXNTBjeTR3TndZSUt3WUJCUVVIQWdFV0syaDBkSEJ6T2k4dmQzZDNMbUZ3Y0d4bExtTnZiUzlqWlhKMGFXWnBZMkYwWldGMWRHaHZjbWwwZVM4d0ZnWURWUjBsQVFIL0JBd3dDZ1lJS3dZQkJRVUhBd013SFFZRFZSME9CQllFRkJYK1dJamluaXFoZDI2WjFnbmdrWWV4U0poS01BNEdBMVVkRHdFQi93UUVBd0lIZ0RBVEJnb3Foa2lHOTJOa0JnRUNBUUgvQkFJRkFEQVRCZ29xaGtpRzkyTmtCZ0VNQVFIL0JBSUZBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBRlVHV1ZMbld6V0UwVEFPVmVycEl3aUR6b2RTdjM2UzdoYzdOcnZUUmVBZjhwcWpwWGM3ZER1dVZGODNSMGpXVXBLRy90dFdkbk50UDlpNHU5d0R3cmI4Y3ZDSHh2L1Y4NnVvZ3NTS0xoQU5EeHA1bUgwY29tbXlHM0dPWmFKWWJQMUIzQmFoNDN3Z2VVcmVlYkx4Rlh1MElkOW9OdGI3RDdKa3FNZC9vT2NuV0poWXlXc3ZqajJxZjVrMWdXd0gzcFZJS1RqTVBHM2hYTHVFU3pHajV4LzZVRXlvUVlSOURNL21GNG1TeUt1bFJvQW11M0UvMzVLTi9mNmNLV25oZEk2OUoxRG5QdkJmcHFPSGM0TUNyeVk2MmR2eXkvaU92UWMzbjNIZ3hWZkZhQnZ2NWd3eDUvT29LY1dBMXZBZEtWUGFGc0hUNmIwbnNqZ1c3SEVPMWtRPT08L2RhdGE+CgkJPGRhdGE+TUlJRnhEQ0NCS3lnQXdJQkFnSVFabHd2c0p0VHZNMXJkWFBPSXlqc0hUQU5CZ2txaGtpRzl3MEJBUXNGQURCMU1VUXdRZ1lEVlFRREREdEJjSEJzWlNCWGIzSnNaSGRwWkdVZ1JHVjJaV3h2Y0dWeUlGSmxiR0YwYVc5dWN5QkRaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwZVRFTE1Ba0dBMVVFQ3d3Q1J6TXhFekFSQmdOVkJBb01Da0Z3Y0d4bElFbHVZeTR4Q3pBSkJnTlZCQVlUQWxWVE1CNFhEVEl5TURneE9EQTRNVEl6TVZvWERUSXpNRGd4T0RBNE1USXpNRm93Z1lveEdqQVlCZ29Ka2lhSmsvSXNaQUVCREFvek5VaFVUVGRIVWxCRU1UUXdNZ1lEVlFRRERDdEJjSEJzWlNCRVpYWmxiRzl3YldWdWREb2dTblZ1WjJoNWRXNGdSM1VnS0V3eVVVbzFWelUwV1U0cE1STXdFUVlEVlFRTERBcEJOek0wVFVvM1ExQlRNUlF3RWdZRFZRUUtEQXRLZFc1bmFIbDFiaUJIZFRFTE1Ba0dBMVVFQmhNQ1ZWTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDL3hrTXUzNStlaklKTVVNZVJKRlFVY2pLSDVpejdqMU5sOGxKd0RQbWpvNjdSeVFrRGxRdUFYeExBOXRPYStzNk8rZndOME1QZjIva3NwOVBOY3dSQXFaU0dGRUk0SkdSWmxEbUc4QUxrUEVVT0swZngyaWNidDR4RHZEdU0vN213NmJOdW9hckNZRHQ1UDFTYlBQQ1FQSjJiZ2I2eW9EaDEzMzN3Nk5NRGlhMFBkaXJlSGkwcHdocitpdmhJWmFJdkFNSHpNR0pQTzVjZmdyWllZL3hyeWZvYWxwaHZNdlhyK0haRGFWS0FJM1dkK3FuQUNUUlM1SkFTeTVUTkdBTDQwaHB5Si9mUm94cnhMTTVvd2IxRGhFaElDeHFtK1VDRExWSFhBaUR2RWtRM3h2VlV1QnlpcEg3TXMwRjk0dWJIQi83VUNWUWwvOXBJRzBNNjI0dkxBZ01CQUFHamdnSTRNSUlDTkRBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkFuK3dCV1ErYTlrQ3BJU3VTWW9Zd3lYN0tleU1IQUdDQ3NHQVFVRkJ3RUJCR1F3WWpBdEJnZ3JCZ0VGQlFjd0FvWWhhSFIwY0RvdkwyTmxjblJ6TG1Gd2NHeGxMbU52YlM5M2QyUnlaek11WkdWeU1ERUdDQ3NHQVFVRkJ6QUJoaVZvZEhSd09pOHZiMk56Y0M1aGNIQnNaUzVqYjIwdmIyTnpjREF6TFhkM1pISm5NekEwTUlJQkhnWURWUjBnQklJQkZUQ0NBUkV3Z2dFTkJna3Foa2lHOTJOa0JRRXdnZjh3Z2NNR0NDc0dBUVVGQndJQ01JRzJESUd6VW1Wc2FXRnVZMlVnYjI0Z2RHaHBjeUJqWlhKMGFXWnBZMkYwWlNCaWVTQmhibmtnY0dGeWRIa2dZWE56ZFcxbGN5QmhZMk5sY0hSaGJtTmxJRzltSUhSb1pTQjBhR1Z1SUdGd2NHeHBZMkZpYkdVZ2MzUmhibVJoY21RZ2RHVnliWE1nWVc1a0lHTnZibVJwZEdsdmJuTWdiMllnZFhObExDQmpaWEowYVdacFkyRjBaU0J3YjJ4cFkza2dZVzVrSUdObGNuUnBabWxqWVhScGIyNGdjSEpoWTNScFkyVWdjM1JoZEdWdFpXNTBjeTR3TndZSUt3WUJCUVVIQWdFV0syaDBkSEJ6T2k4dmQzZDNMbUZ3Y0d4bExtTnZiUzlqWlhKMGFXWnBZMkYwWldGMWRHaHZjbWwwZVM4d0ZnWURWUjBsQVFIL0JBd3dDZ1lJS3dZQkJRVUhBd013SFFZRFZSME9CQllFRklMK01ZVld6eXMxbHF2S2dwRHlzSGFVckFLVU1BNEdBMVVkRHdFQi93UUVBd0lIZ0RBVEJnb3Foa2lHOTJOa0JnRUNBUUgvQkFJRkFEQVRCZ29xaGtpRzkyTmtCZ0VNQVFIL0JBSUZBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBai9GZWxBd3RnQ240RnE5OC9Qdkx6VEdmbFREeVJPai83NUtUdVQwTS9DUTB5WHYvSzgxcmUxMjFSdzVaei9xMlR1K1c3dXVUdVNncXJtcm9pcXgxQmExVkVjdDZkbUU2TDFpUy9FRjFmd3pSM1dPUCtlV2h2R2YwNUVkNlRGRkt2YlJlZ1hBZ0d0SUVHTHkxdTZoaGtOZXBXUnF6akRqbDJQT0dLMjE5VERpMVpISWt6WUZHd0JyTUE5dVp1NW9UZVBYclR4MVhwT1Fhd0FQaC9lOUJtYW41UUx4NzBxWVpsOTE2Tk00aXBEVjNNQnRNdEh1bEUwZ2ZQQVNEUCswTjc5VjJMUUJJUFozTDZOQ2lKdU9qQ1BJUW9mK1FBV0M5TXN2Q3NKVm42aGhreWZCcW5mTWc5N2ZTUzlwdDd1U3k0NjVaQnN0TWJ4ZTRkcjZtMFRNM0FRPT08L2RhdGE+Cgk8L2FycmF5PgoKCTxrZXk+REVSLUVuY29kZWQtUHJvZmlsZTwva2V5PgoJPGRhdGE+TUlJUXl3WUpLb1pJaHZjTkFRY0NvSUlRdkRDQ0VMZ0NBUUV4RHpBTkJnbGdoa2dCWlFNRUFnRUZBRENDQm9VR0NTcUdTSWIzRFFFSEFhQ0NCbllFZ2daeU1ZSUdiakFNREFkV1pYSnphVzl1QWdFQk1CQU1DbFJwYldWVWIweHBkbVVDQWdGdE1CRU1DRkJzWVhSbWIzSnRNQVVNQTJsUFV6QVREQTVKYzFoamIyUmxUV0Z1WVdkbFpBRUJBREFYREFoVVpXRnRUbUZ0WlF3TFNuVnVaMmg1ZFc0Z1IzVXdHUXdKUVhCd1NVUk9ZVzFsREF4VWIzZHVJRU4xY0NCQmNIQXdHd3dFVG1GdFpRd1RSR1YyWld4dmNHMWxiblF0VUhKdlptbHNaVEFkREF4RGNtVmhkR2x2YmtSaGRHVVhEVEl5TURneE9EQTVNamN4T1Zvd0hnd09WR1ZoYlVsa1pXNTBhV1pwWlhJd0RBd0tRVGN6TkUxS04wTlFVekFmREE1RmVIQnBjbUYwYVc5dVJHRjBaUmNOTWpNd09ERTRNRGt5TnpFNVdqQWlEQmRRY205bWFXeGxSR2x6ZEhKcFluVjBhVzl1Vkhsd1pRd0hURWxOU1ZSRlJEQXJEQnRCY0hCc2FXTmhkR2x2Ymtsa1pXNTBhV1pwWlhKUWNtVm1hWGd3REF3S1FUY3pORTFLTjBOUVV6QXNEQVJWVlVsRURDUTFabUl4TVRkak5pMDFOMlEyTFRRM1lXUXRPR0kzWkMweFptSmxOelEwWm1Rek16TXdYUXdWUkdWMlpXeHZjR1Z5UTJWeWRHbG1hV05oZEdWek1FUUVJSUsyTkV2N1BIZElGSkJLVm96eXloNnRVQWRMZC84eUxERjRMRFpBQnZRTUJDQmIvcjNFRzdLTklBSERDczA1ZVhSZ2paZEhpNnNCZTNkVlhNN3lWMUVTTFRDQ0FTQU1ERVZ1ZEdsMGJHVnRaVzUwYzNDQ0FRNENBUUd3Z2dFSE1EUU1GbUZ3Y0d4cFkyRjBhVzl1TFdsa1pXNTBhV1pwWlhJTUdrRTNNelJOU2pkRFVGTXVZMjl0TG5SdmQyNWpkWEF1WVhCd01CNE1EMkZ3Y3kxbGJuWnBjbTl1YldWdWRBd0xaR1YyWld4dmNHMWxiblF3TEF3ZlkyOXRMbUZ3Y0d4bExtUmxkbVZzYjNCbGNpNWhjSEJzWlhOcFoyNXBiakFKREFkRVpXWmhkV3gwTURFTUkyTnZiUzVoY0hCc1pTNWtaWFpsYkc5d1pYSXVkR1ZoYlMxcFpHVnVkR2xtYVdWeURBcEJOek0wVFVvM1ExQlRNQk1NRG1kbGRDMTBZWE5yTFdGc2JHOTNBUUgvTURrTUZtdGxlV05vWVdsdUxXRmpZMlZ6Y3kxbmNtOTFjSE13SHd3TVFUY3pORTFLTjBOUVV5NHFEQTlqYjIwdVlYQndiR1V1ZEc5clpXNHdnZ052REJKUWNtOTJhWE5wYjI1bFpFUmxkbWxqWlhNd2dnTlhEQmt3TURBd09EQXlNQzB3TURFeU5qRTRRVEUwUkRrd01ESkZEQmt3TURBd09EQXpNQzB3TURFNU1FUXlPRE5CTkRNNE1ESkZEQmt3TURBd09ERXdNUzB3TURFd05UUTFSVEJGUlRnd01ERkZEQ2hqWmpaaU5EUmhZVFF5T1RFMU5EVTFOVE5tTlRFNE5tRmxZV1JpWWpCaFptSTJaRGRtTnpWbERCa3dNREF3T0RBek1DMHdNREExTlRVMVF6QkZSamc0TURKRkRCa3dNREF3T0RBek1DMHdNREE0TWpSQk1qTkRRa0k0TURKRkRCa3dNREF3T0RBek1DMHdNREU1TkVNeVFUQXlSREU0TURKRkRCa3dNREF3T0RBek1DMHdNREV5TnpoRE5qQXlSRUkwTURKRkRCa3dNREF3T0RBeU1DMHdNREUyTUVNMk5qSkZNekl3TURKRkRDaGxZVEZoT1RkbE9ETXhaalUzWmpZM05qSTJNbUUxWTJWbE5UWXpORGt6TURFeU1ERXlORFF5REJrd01EQXdPREF6TUMwd01ERXhNVFEyTURJeVJqZzRNREpGREJrd01EQXdPREF6TUMwd01ERkZOekUxUXpBeVJFRTRNREpGRENoaVl6STJNMll4T0RrNFpqQmpPREk0TVRVeE56STFNVFE1TVRZNFl6STBaV0prWVRWa1ltRXdEQ2d5T1dReVlXRXhNRFJqTWpRNU5ETTBORGcwTm1ZMU9HSm1PREV4TmpWak5URXpOekUzTXpnNURDZzVaVFpoTkdObE5UQm1aRFJqWkRSa05HWXdZVGxsTmpNeFpqWmpNMkl5TVRjMU9UTXhPVEUxRENnellqUmxaVEF4TkRJeU9XUTBOelJsWkdJMFptVmlNRFJqWXpNek9UQXhZemMwTlRVME5EQXlEQ2czWkRWbFpEQmhObU5oTnpZM1lUbGpPRGd4TjJZMU5UTTROVFUzTWpGbU9EQm1aREUxWVRCbURDaGlOVGszWlROak5tWTRNVEkzT0dNMU1ESTJNRFV4TTJRNE9XSmpPVFpoTWpKallUWmlOR0l3RENnMFltTmtOVFJqTnpSbU16VTRZMk5oTVRjME1qUmtZVGszWlRsbFl6RTVPVEZpWmpVME5EQTFEQmt3TURBd09EQXlNQzB3TURBMk5EUkVOakl4UmpNd01ESkZEQ2hsTmpsaU9XUTRNbVprWmpFMU1HUTVOamM1WXpJMk1EVTVNelF3TWpCaVpEaGpOMlZpTjJaakRDaG1aVEExTW1Oa01EbGhOemMxTURjNFpUWTJNamcxTnpaa09UQTJZMlEwTXpkaU1ESmtZalZqRENneFl6TmlZVFZpTW1ZM1lqVXdNVEZtWldaaU1UazJNalprWmpNNU9Ua3lZVGMwTUdFMll6RTJEQmt3TURBd09EQXpNQzB3TURFek5UaEJPVEkyT1RrNE1ESkZEQmt3TURBd09EQXlNQzB3TURCRU56azROREJCUmpNd01ESkZvSUlJUERDQ0FrTXdnZ0hKb0FNQ0FRSUNDQzNGL0lqU3hVdVZNQW9HQ0NxR1NNNDlCQU1ETUdjeEd6QVpCZ05WQkFNTUVrRndjR3hsSUZKdmIzUWdRMEVnTFNCSE16RW1NQ1FHQTFVRUN3d2RRWEJ3YkdVZ1EyVnlkR2xtYVdOaGRHbHZiaUJCZFhSb2IzSnBkSGt4RXpBUkJnTlZCQW9NQ2tGd2NHeGxJRWx1WXk0eEN6QUpCZ05WQkFZVEFsVlRNQjRYRFRFME1EUXpNREU0TVRrd05sb1hEVE01TURRek1ERTRNVGt3Tmxvd1p6RWJNQmtHQTFVRUF3d1NRWEJ3YkdVZ1VtOXZkQ0JEUVNBdElFY3pNU1l3SkFZRFZRUUxEQjFCY0hCc1pTQkRaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwZVRFVE1CRUdBMVVFQ2d3S1FYQndiR1VnU1c1akxqRUxNQWtHQTFVRUJoTUNWVk13ZGpBUUJnY3Foa2pPUFFJQkJnVXJnUVFBSWdOaUFBU1k2Uzg5UUhLazdaTWljb0VUSE4wUWxmSEZvMDV4M0JRVzJRN2xwZ1VxZDJSN1gwNDQwN3NjUkxWLzlSKzJNbUpkeWVtRVcwOHdUeEZhQVAxWVdBeWw5UThzVFFkSEUzWGFsNWVYYnpGYzdTdWRleUE3MkxsVTJWNlpwRHBSQ2pHalFqQkFNQjBHQTFVZERnUVdCQlM3c042aFdET0ltcVNLbWQ2K3ZldXYyc3NrcXpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRUF3SUJCakFLQmdncWhrak9QUVFEQXdOb0FEQmxBakVBZytuQnhCWmVHbDAwR05udDcvUnNEZ0JHUzdqZnNrWVJ4US85NW5xTW9hWnJ6c0lEMUp6MWs4WjB1R3JmcWlNVkFqQnRab29ReXRRTjFFL05qVU0rdElwanBUTnU0MjNhRjdka0g4aFRKdm1JWW5RNUN4ZGJ5MUdvRE9nWUErZWlzaWd3Z2dMbU1JSUNiYUFEQWdFQ0FnZ3pEZTc0djB4b0xqQUtCZ2dxaGtqT1BRUURBekJuTVJzd0dRWURWUVFEREJKQmNIQnNaU0JTYjI5MElFTkJJQzBnUnpNeEpqQWtCZ05WQkFzTUhVRndjR3hsSUVObGNuUnBabWxqWVhScGIyNGdRWFYwYUc5eWFYUjVNUk13RVFZRFZRUUtEQXBCY0hCc1pTQkpibU11TVFzd0NRWURWUVFHRXdKVlV6QWVGdzB4TnpBeU1qSXlNakl6TWpKYUZ3MHpNakF5TVRnd01EQXdNREJhTUhJeEpqQWtCZ05WQkFNTUhVRndjR3hsSUZONWMzUmxiU0JKYm5SbFozSmhkR2x2YmlCRFFTQTBNU1l3SkFZRFZRUUxEQjFCY0hCc1pTQkRaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwZVRFVE1CRUdBMVVFQ2d3S1FYQndiR1VnU1c1akxqRUxNQWtHQTFVRUJoTUNWVk13V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFHYTZSV2IzMmZKOUhPTm82U0cxYk5WRFprU3NtVWFKbjZ5U0IrNHZWWUQ5emlhdXNaUnk4dTd6dWtBYlFCRTBSOFdpYXRvSndwSllybDVnWnZUM3hhbzRIM01JSDBNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdId1lEVlIwakJCZ3dGb0FVdTdEZW9WZ3ppSnFraXBuZXZyM3JyOXJMSktzd1JnWUlLd1lCQlFVSEFRRUVPakE0TURZR0NDc0dBUVVGQnpBQmhpcG9kSFJ3T2k4dmIyTnpjQzVoY0hCc1pTNWpiMjB2YjJOemNEQXpMV0Z3Y0d4bGNtOXZkR05oWnpNd053WURWUjBmQkRBd0xqQXNvQ3FnS0lZbWFIUjBjRG92TDJOeWJDNWhjSEJzWlM1amIyMHZZWEJ3YkdWeWIyOTBZMkZuTXk1amNtd3dIUVlEVlIwT0JCWUVGSHBIdWppS0ZTUklJa2JOdm84YUpIczBBeXBwTUE0R0ExVWREd0VCL3dRRUF3SUJCakFRQmdvcWhraUc5Mk5rQmdJUkJBSUZBREFLQmdncWhrak9QUVFEQXdObkFEQmtBakFWREttT3hxK1dhV3VubjkxYzFBTlpiSzVTMUdER2kzYmd0OFdpOFFsODRKcmphN0hqZkRIRUozcW5qb245cTNjQ01HRXpJUEVwLy9tSE1xNHB5R1E5ZG50UnBOSUNMM2ErWUNLUjhkVTZkZHkwNHNZcWx2N0dDZHhLVDlVazhQektzakNDQXdjd2dnS3RvQU1DQVFJQ0NGNFl2VzZrZDBEQU1Bb0dDQ3FHU000OUJBTUNNSEl4SmpBa0JnTlZCQU1NSFVGd2NHeGxJRk41YzNSbGJTQkpiblJsWjNKaGRHbHZiaUJEUVNBME1TWXdKQVlEVlFRTERCMUJjSEJzWlNCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVUTUJFR0ExVUVDZ3dLUVhCd2JHVWdTVzVqTGpFTE1Ba0dBMVVFQmhNQ1ZWTXdIaGNOTWpJd05URTVNVGswTnpJMFdoY05Nall3TmpFM01UazBOekl6V2pCT01Tb3dLQVlEVlFRRERDRlhWMFJTSUZCeWIzWnBjMmx2Ym1sdVp5QlFjbTltYVd4bElGTnBaMjVwYm1jeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFL3QwK1hSTWpIRFhkN3dnZTNseUZlSHo5cWx6QWdVK3hLYjk0eTFEVW1TUG85SlpNeG1laVIrZEdtazlPbUU4bXh3UGVPTHFTbW5TQmxDeWJpaDdURTZPQ0FVOHdnZ0ZMTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVZWtlNk9Jb1ZKRWdpUnMyK2p4b2tlelFES21rd1FRWUlLd1lCQlFVSEFRRUVOVEF6TURFR0NDc0dBUVVGQnpBQmhpVm9kSFJ3T2k4dmIyTnpjQzVoY0hCc1pTNWpiMjB2YjJOemNEQXpMV0Z6YVdOaE5EQXpNSUdXQmdOVkhTQUVnWTR3Z1lzd2dZZ0dDU3FHU0liM1kyUUZBVEI3TUhrR0NDc0dBUVVGQndJQ01HME1hMVJvYVhNZ1kyVnlkR2xtYVdOaGRHVWdhWE1nZEc4Z1ltVWdkWE5sWkNCbGVHTnNkWE5wZG1Wc2VTQm1iM0lnWm5WdVkzUnBiMjV6SUdsdWRHVnlibUZzSUhSdklFRndjR3hsSUZCeWIyUjFZM1J6SUdGdVpDOXZjaUJCY0hCc1pTQndjbTlqWlhOelpYTXVNQjBHQTFVZERnUVdCQlFPNGRHYkNkQnVjd2FocEJzVzlBd2ROU0FCNWpBT0JnTlZIUThCQWY4RUJBTUNCNEF3RHdZSktvWklodmRqWkF3VEJBSUZBREFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUI0MEdBODVQVXFJZWFvUnBIYVhIR1BlTHpXb0FrN25vWTJzMlU3OTJRV1h3SWhBUFYzb2dTYlRrelFJTlV2R0ZMZHVkVUFMMjJEZ2hNNHdoOEVtbnZZSjRSVU1ZSUIxekNDQWRNQ0FRRXdmakJ5TVNZd0pBWURWUVFEREIxQmNIQnNaU0JUZVhOMFpXMGdTVzUwWldkeVlYUnBiMjRnUTBFZ05ERW1NQ1FHQTFVRUN3d2RRWEJ3YkdVZ1EyVnlkR2xtYVdOaGRHbHZiaUJCZFhSb2IzSnBkSGt4RXpBUkJnTlZCQW9NQ2tGd2NHeGxJRWx1WXk0eEN6QUpCZ05WQkFZVEFsVlRBZ2hlR0wxdXBIZEF3REFOQmdsZ2hrZ0JaUU1FQWdFRkFLQ0I2VEFZQmdrcWhraUc5dzBCQ1FNeEN3WUpLb1pJaHZjTkFRY0JNQndHQ1NxR1NJYjNEUUVKQlRFUEZ3MHlNakE0TVRnd09USTNNVGxhTUNvR0NTcUdTSWIzRFFFSk5ERWRNQnN3RFFZSllJWklBV1VEQkFJQkJRQ2hDZ1lJS29aSXpqMEVBd0l3THdZSktvWklodmNOQVFrRU1TSUVJQ3ovUXM0dXQ5eFZMdk84d3prditCRGRTUEdrcmdJYW5Hb29BY2xxNHNweE1GSUdDU3FHU0liM0RRRUpEekZGTUVNd0NnWUlLb1pJaHZjTkF3Y3dEZ1lJS29aSWh2Y05Bd0lDQWdDQU1BMEdDQ3FHU0liM0RRTUNBZ0ZBTUFjR0JTc09Bd0lITUEwR0NDcUdTSWIzRFFNQ0FnRW9NQW9HQ0NxR1NNNDlCQU1DQkVjd1JRSWdZSEZRLzBubWlEV1JNd2FJUHNxcXF1Q3I3YzN5ZG5HOUNyYW1qRFNHK284Q0lRQzZrWWxCYWtITTJBWjNOVkh3THcrSnV6S1Nld3ljVkNwY3YxbGhLMWpkS0E9PTwvZGF0YT4KCQkJCQkJCQkJCQkJCgk8a2V5PkVudGl0bGVtZW50czwva2V5PgoJPGRpY3Q+CgkJCQkKCQkJCTxrZXk+YXBzLWVudmlyb25tZW50PC9rZXk+CgkJPHN0cmluZz5kZXZlbG9wbWVudDwvc3RyaW5nPgoJCQkJCgkJCQk8a2V5PmFwcGxpY2F0aW9uLWlkZW50aWZpZXI8L2tleT4KCQk8c3RyaW5nPkE3MzRNSjdDUFMuY29tLnRvd25jdXAuYXBwPC9zdHJpbmc+CgkJCQkKCQkJCTxrZXk+a2V5Y2hhaW4tYWNjZXNzLWdyb3Vwczwva2V5PgoJCTxhcnJheT4KCQkJCTxzdHJpbmc+QTczNE1KN0NQUy4qPC9zdHJpbmc+CgkJCQk8c3RyaW5nPmNvbS5hcHBsZS50b2tlbjwvc3RyaW5nPgoJCTwvYXJyYXk+CgkJCQkKCQkJCTxrZXk+Z2V0LXRhc2stYWxsb3c8L2tleT4KCQk8dHJ1ZS8+CgkJCQkKCQkJCTxrZXk+Y29tLmFwcGxlLmRldmVsb3Blci50ZWFtLWlkZW50aWZpZXI8L2tleT4KCQk8c3RyaW5nPkE3MzRNSjdDUFM8L3N0cmluZz4KCQkJCQoJCQkJPGtleT5jb20uYXBwbGUuZGV2ZWxvcGVyLmFwcGxlc2lnbmluPC9rZXk+CgkJPGFycmF5PgoJCQkJPHN0cmluZz5EZWZhdWx0PC9zdHJpbmc+CgkJPC9hcnJheT4KCgk8L2RpY3Q+Cgk8a2V5PkV4cGlyYXRpb25EYXRlPC9rZXk+Cgk8ZGF0ZT4yMDIzLTA4LTE4VDA5OjI3OjE5WjwvZGF0ZT4KCTxrZXk+TmFtZTwva2V5PgoJPHN0cmluZz5EZXZlbG9wbWVudC1Qcm9maWxlPC9zdHJpbmc+Cgk8a2V5PlByb3Zpc2lvbmVkRGV2aWNlczwva2V5PgoJPGFycmF5PgoJCTxzdHJpbmc+MDAwMDgwMjAtMDAxMjYxOEExNEQ5MDAyRTwvc3RyaW5nPgoJCTxzdHJpbmc+MDAwMDgwMzAtMDAxOTBEMjgzQTQzODAyRTwvc3RyaW5nPgoJCTxzdHJpbmc+MDAwMDgxMDEtMDAxMDU0NUUwRUU4MDAxRTwvc3RyaW5nPgoJCTxzdHJpbmc+Y2Y2YjQ0YWE0MjkxNTQ1NTUzZjUxODZhZWFkYmIwYWZiNmQ3Zjc1ZTwvc3RyaW5nPgoJCTxzdHJpbmc+MDAwMDgwMzAtMDAwNTU1NUMwRUY4ODAyRTwvc3RyaW5nPgoJCTxzdHJpbmc+MDAwMDgwMzAtMDAwODI0QTIzQ0JCODAyRTwvc3RyaW5nPgoJCTxzdHJpbmc+MDAwMDgwMzAtMDAxOTRDMkEwMkQxODAyRTwvc3RyaW5nPgoJCTxzdHJpbmc+MDAwMDgwMzAtMDAxMjc4QzYwMkRCNDAyRTwvc3RyaW5nPgoJCTxzdHJpbmc+MDAwMDgwMjAtMDAxNjBDNjYyRTMyMDAyRTwvc3RyaW5nPgoJCTxzdHJpbmc+ZWExYTk3ZTgzMWY1N2Y2NzYyNjJhNWNlZTU2MzQ5MzAxMjAxMjQ0Mjwvc3RyaW5nPgoJCTxzdHJpbmc+MDAwMDgwMzAtMDAxMTE0NjAyMkY4ODAyRTwvc3RyaW5nPgoJCTxzdHJpbmc+MDAwMDgwMzAtMDAxRTcxNUMwMkRBODAyRTwvc3RyaW5nPgoJCTxzdHJpbmc+YmMyNjNmMTg5OGYwYzgyODE1MTcyNTE0OTE2OGMyNGViZGE1ZGJhMDwvc3RyaW5nPgoJCTxzdHJpbmc+MjlkMmFhMTA0YzI0OTQzNDQ4NDZmNThiZjgxMTY1YzUxMzcxNzM4OTwvc3RyaW5nPgoJCTxzdHJpbmc+OWU2YTRjZTUwZmQ0Y2Q0ZDRmMGE5ZTYzMWY2YzNiMjE3NTkzMTkxNTwvc3RyaW5nPgoJCTxzdHJpbmc+M2I0ZWUwMTQyMjlkNDc0ZWRiNGZlYjA0Y2MzMzkwMWM3NDU1NDQwMjwvc3RyaW5nPgoJCTxzdHJpbmc+N2Q1ZWQwYTZjYTc2N2E5Yzg4MTdmNTUzODU1NzIxZjgwZmQxNWEwZjwvc3RyaW5nPgoJCTxzdHJpbmc+YjU5N2UzYzZmODEyNzhjNTAyNjA1MTNkODliYzk2YTIyY2E2YjRiMDwvc3RyaW5nPgoJCTxzdHJpbmc+NGJjZDU0Yzc0ZjM1OGNjYTE3NDI0ZGE5N2U5ZWMxOTkxYmY1NDQwNTwvc3RyaW5nPgoJCTxzdHJpbmc+MDAwMDgwMjAtMDAwNjQ0RDYyMUYzMDAyRTwvc3RyaW5nPgoJCTxzdHJpbmc+ZTY5YjlkODJmZGYxNTBkOTY3OWMyNjA1OTM0MDIwYmQ4YzdlYjdmYzwvc3RyaW5nPgoJCTxzdHJpbmc+ZmUwNTJjZDA5YTc3NTA3OGU2NjI4NTc2ZDkwNmNkNDM3YjAyZGI1Yzwvc3RyaW5nPgoJCTxzdHJpbmc+MWMzYmE1YjJmN2I1MDExZmVmYjE5NjI2ZGYzOTk5MmE3NDBhNmMxNjwvc3RyaW5nPgoJCTxzdHJpbmc+MDAwMDgwMzAtMDAxMzU4QTkyNjk5ODAyRTwvc3RyaW5nPgoJCTxzdHJpbmc+MDAwMDgwMjAtMDAwRDc5ODQwQUYzMDAyRTwvc3RyaW5nPgoJPC9hcnJheT4KCTxrZXk+VGVhbUlkZW50aWZpZXI8L2tleT4KCTxhcnJheT4KCQk8c3RyaW5nPkE3MzRNSjdDUFM8L3N0cmluZz4KCTwvYXJyYXk+Cgk8a2V5PlRlYW1OYW1lPC9rZXk+Cgk8c3RyaW5nPkp1bmdoeXVuIEd1PC9zdHJpbmc+Cgk8a2V5PlRpbWVUb0xpdmU8L2tleT4KCTxpbnRlZ2VyPjM2NTwvaW50ZWdlcj4KCTxrZXk+VVVJRDwva2V5PgoJPHN0cmluZz41ZmIxMTdjNi01N2Q2LTQ3YWQtOGI3ZC0xZmJlNzQ0ZmQzMzM8L3N0cmluZz4KCTxrZXk+VmVyc2lvbjwva2V5PgoJPGludGVnZXI+MTwvaW50ZWdlcj4KPC9kaWN0Pgo8L3BsaXN0PqCCDT8wggQ0MIIDHKADAgECAghj5xwhnRqTJzANBgkqhkiG9w0BAQsFADBzMS0wKwYDVQQDDCRBcHBsZSBpUGhvbmUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxIDAeBgNVBAsMF0NlcnRpZmljYXRpb24gQXV0aG9yaXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzAeFw0yMjAzMTcyMTI5MThaFw0yNzAzMTYyMTI5MTdaMFkxNTAzBgNVBAMMLEFwcGxlIGlQaG9uZSBPUyBQcm92aXNpb25pbmcgUHJvZmlsZSBTaWduaW5nMRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL545kd0HzXjUSi4mFuR+2+zoKUoYFeReTUKbBSiadlp5IMZ6rPRgaORCH63HtCpqJj3MUQPnZePc8hBaO9qBVH8enPgGXzWsuHaJ+q3yyyP4hh7ZZjSYVo8MCQ7fglx6Tx+v2nUw2IYWcMxint35iK1EeNHmLfnnY65qmGBs5DxOE3IT6wEJdJHnKnm6FSDYABau0AjPyARbbzjLeGjYTyPP+CwQt+/70AYeNSWhHn/BHLHUpzYe4ftPJwECNsQiXtdLiCZu6vy/VUBaPAutG1Cd890BGIudFazmzkDsCIx3Qq+Qmxh3fKp04XqXlImpfvKTJHBZw6KD4tU8johTu0CAwEAAaOB5TCB4jAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFG/xlRhiXODI8cXtbBjJ4NNkUpggMEAGCCsGAQUFBwEBBDQwMjAwBggrBgEFBQcwAYYkaHR0cDovL29jc3AuYXBwbGUuY29tL29jc3AwMy1haXBjYTA3MC8GA1UdHwQoMCYwJKAioCCGHmh0dHA6Ly9jcmwuYXBwbGUuY29tL2FpcGNhLmNybDAdBgNVHQ4EFgQUbqjytSk5OS/X9o+GqtSGtw5i1zwwDgYDVR0PAQH/BAQDAgeAMA8GCSqGSIb3Y2QGOgQCBQAwDQYJKoZIhvcNAQELBQADggEBAK2ghD81nPsGJ0hinyiqpmCDYoMdL1xHaScS2m1I0q+L34AXmg6kzLYKUjDl2igpKvsvRiewTr+bKb2CbN/ppeW/O50YzMQAKtV4xhnxgodz/lC+B1Q0AiuLZ0DvRVlGT9rExi1Ih0xVCHSzcMEGLCa1T66dCj85wla/95cF/Tn1krEMsMLixdRJszQ0dqGrfKQE8kuFOQNfd1rccizZKQTkppHydxvbBREH4SUnwDRn3nosa0y8wRfsfSdvbSolMYGj2+MZWCyhT0dgJd0hAv4W1cfUeGRKjC+FMWhXPDr13Vua6AJ7geunFp6jF32mBs48RqwRREqpq2ikpEg8OJMwggREMIIDLKADAgECAghcY8rkSjdTyTANBgkqhkiG9w0BAQsFADBiMQswCQYDVQQGEwJVUzETMBEGA1UEChMKQXBwbGUgSW5jLjEmMCQGA1UECxMdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxFjAUBgNVBAMTDUFwcGxlIFJvb3QgQ0EwHhcNMTcwNTEwMjEyNzMwWhcNMzAxMjMxMDAwMDAwWjBzMS0wKwYDVQQDDCRBcHBsZSBpUGhvbmUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxIDAeBgNVBAsMF0NlcnRpZmljYXRpb24gQXV0aG9yaXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMlFagEPPoMEhsf8v9xe8B6B7hcwc2MmLt49eiTNkz5POUe6db7zwNLxWaKrH/4KhjzZLZoH8g5ruSmRGl8iCovxclgFrkxLRMV5p4A8sIjgjAwnhF0Z5YcZNsvjxXa3sPRBclH0BVyDS6JtplG48Sbfe16tZQzGsphRjLt9G0zBTsgIx9LtZAu03RuNT0B9G49IlpJb89CYftm8pBkOmWG7QV0BzFt3en0k0NzTU//D3MWULLZaTY4YIzm92cZSPtHy9CWKoSqH/dgMRilR/+0XbIkla4e/imkUn3efwxW3aLOIRb2E5gYCQWQPrSoouBXJ4KynirpyBDSyeIz4soUCAwEAAaOB7DCB6TAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFCvQaUeUdgn+9GuNLkCm90dNfwheMEQGCCsGAQUFBwEBBDgwNjA0BggrBgEFBQcwAYYoaHR0cDovL29jc3AuYXBwbGUuY29tL29jc3AwMy1hcHBsZXJvb3RjYTAuBgNVHR8EJzAlMCOgIaAfhh1odHRwOi8vY3JsLmFwcGxlLmNvbS9yb290LmNybDAdBgNVHQ4EFgQUb/GVGGJc4Mjxxe1sGMng02RSmCAwDgYDVR0PAQH/BAQDAgEGMBAGCiqGSIb3Y2QGAhIEAgUAMA0GCSqGSIb3DQEBCwUAA4IBAQA6z6yYjb6SICEJrZXzsVwh+jYtVyBEdHNkkgizlqz3bZf6WzQ4J88SRtM8EfAHyZmQsdHoEQml46VrbGMIP54l+tWZnEzm5c6Osk1o7Iuro6JPihEVPtwUKxzGRLZvZ8VbT5UpLYdcP9yDHndP7dpUpy3nE4HBY8RUCxtLCmooIgjUN5J8f2coX689P7esWR04NGRa7jNKGUJEKcTKGGvhwVMtLfRNwhX2MzIYePEmb4pN65RMo+j/D7MDi2Xa6y7YZVCf3J+K3zGohFTcUlJB0rITHTFGR4hfPu7D8owjBJXrrIo+gmwGny7ji0OaYls0DfSZzyzuunKGGSOl/I61MIIEuzCCA6OgAwIBAgIBAjANBgkqhkiG9w0BAQUFADBiMQswCQYDVQQGEwJVUzETMBEGA1UEChMKQXBwbGUgSW5jLjEmMCQGA1UECxMdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxFjAUBgNVBAMTDUFwcGxlIFJvb3QgQ0EwHhcNMDYwNDI1MjE0MDM2WhcNMzUwMjA5MjE0MDM2WjBiMQswCQYDVQQGEwJVUzETMBEGA1UEChMKQXBwbGUgSW5jLjEmMCQGA1UECxMdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxFjAUBgNVBAMTDUFwcGxlIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDkkakJH5HbHkdQ6wXtXnmELes2oldMVeyLGYne+Uts9QerIjAC6Bg++FAJ039BqJj50cpmnCRrEdCju+QbKsMflZ56DKRHi1vUFjczy8QPTc4UadHJGXL1XQ7Vf1+b8iUDulWPTV0N8WQ1IxVLFVkds5T39pyez1C6wVhQZ48ItCD3y6wsIG9wtj8BMIy3Q88PnT3zK0koGsj+zrW5DtleHNbLPbU6rfQPDgCSC7EhFi501TwN22IWq6NxkkdTVcGvL0Gz+PvjcM3mo0xFfh9Ma1CWQYnEdGILEINBhzOKgbEwWOxaBDKMaLOPHd5lc/9nXmW8Sdh2nzMUZaF3lMktAgMBAAGjggF6MIIBdjAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUK9BpR5R2Cf70a40uQKb3R01/CF4wHwYDVR0jBBgwFoAUK9BpR5R2Cf70a40uQKb3R01/CF4wggERBgNVHSAEggEIMIIBBDCCAQAGCSqGSIb3Y2QFATCB8jAqBggrBgEFBQcCARYeaHR0cHM6Ly93d3cuYXBwbGUuY29tL2FwcGxlY2EvMIHDBggrBgEFBQcCAjCBthqBs1JlbGlhbmNlIG9uIHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFzc3VtZXMgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgY2VydGlmaWNhdGUgcG9saWN5IGFuZCBjZXJ0aWZpY2F0aW9uIHByYWN0aWNlIHN0YXRlbWVudHMuMA0GCSqGSIb3DQEBBQUAA4IBAQBcNplMLXi37Yyb3PN3m/J20ncwT8EfhYOFG5k9RzfyqZtAjizUsZAS2L70c5vu0mQPy3lPNNiiPvl4/2vIB+x9OYOLUyDTOMSxv5pPCmv/K/xZpwUJfBdAVhEedNO3iyM7R6PVbyTi69G3cN8PReEnyvFteO3ntRcXqNx+IjXKJdXZD9Zr1KIkIxH3oayPc4FgxhtbCS+SsvhESPBgOJ4V9T0mZyCKM2r3DYLP3uujL/lTaltkwGMzd/c6ByxW69oPIQ7aunMZT7XZNn/Bh1XZp5m5MkL72NVxnn6hUrcbvZNCJBIqxw8dtk2cXmPIS4AXUKqK1drk/NAJBzewdXUhMYIChTCCAoECAQEwfzBzMS0wKwYDVQQDDCRBcHBsZSBpUGhvbmUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxIDAeBgNVBAsMF0NlcnRpZmljYXRpb24gQXV0aG9yaXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUwIIY+ccIZ0akycwCQYFKw4DAhoFAKCB3DAYBgkqhkiG9w0BCQMxCwYJKoZIhvcNAQcBMBwGCSqGSIb3DQEJBTEPFw0yMjA4MTgwOTI3MTlaMCMGCSqGSIb3DQEJBDEWBBRJz68XLtAe4cyCss0Xcs408JNzNTApBgkqhkiG9w0BCTQxHDAaMAkGBSsOAwIaBQChDQYJKoZIhvcNAQEBBQAwUgYJKoZIhvcNAQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYIKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEggEAnOQrdDJHQxKoWSLRSyJ+9ItLHSUWgL4JMSf5XL/M/+sPspRNn+2XnfHxRzs8E6aVNR5zw//dtIo4T+vB24LKB9GhL7O5RXfVFP9Lu0UG99Zr8DhV0bNWRWPkAqJN1HMKuA0hoU6FjubZ2DRLdqRZvd8lX7tqeI7l5VQo0OGXmu8c/Obnv2zIsaNig+pTnKUwvrCleJ9SPc/JX44m4It0gzXzUerY3BNvPCiKgzKPqt172gQctTTfs4kbDxtcBXfdDf6vynpDug8x39MPgqkkz4th5aTshoIFqQJTDnmohFGYhwDsZpvZdR2aC5v6snnMw2/q9hX/CR3tV3979CUuOg==
'
  KEY_PWD: '1234'

jobs:
  build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Set up Node.js 12.16.1
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: 12.16.1

      - name: Install npm dependencies
        run: npm cache clear --force && npm install --legacy-peer-deps

      - name: Install pod dependencies
        run: cd ios && pod install

      # - name: install bundle
      #   run: react-native bundle --entry-file index.js --platform ios --dev false --bundle-output ios/main.jsbundle --assets-dest ios

      # - name: Install the Apple certificate and provisioning profile
      #   run: |
      #     # create variables
      #     CERTIFICATE_PATH=$RUNNER_TEMP/Certificates.p12
      #     PP_PATH=$RUNNER_TEMP/DevelopmentProfile.mobileprovision
      #     KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

      #     # import certificate and provisioning profile from secrets
      #     echo -n "$DEVELOPMENT_CERTIFICATE" | base64 --decode --output $CERTIFICATE_PATH
      #     echo -n "$DEVELOPMENT_PROFILE" | base64 --decode --output $PP_PATH

      #     # create temporary keychain
      #     security create-keychain -p "$KEY_PWD" $KEYCHAIN_PATH
      #     security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
      #     security unlock-keychain -p "$KEY_PWD" $KEYCHAIN_PATH

      #     # import certificate to keychain
      #     security import $CERTIFICATE_PATH -P "$CERTIFICATE_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
      #     security list-keychain -d user -s $KEYCHAIN_PATH

      #     # apply provisioning profile
      #     mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
      #     cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      # - name: Select Xcode
      #   run: sudo xcode-select -switch /Applications/Xcode_13.2.1.app

      # - name: Xcode Version
      #   run: /usr/bin/xcodebuild -version

      # - name: Create build folder
      #   run: mkdir -p build && mkdir -p development

      - name: Build and export iOS
        uses: yukiarrr/ios-build-action@v1.4.0
        with:
          project-path: ios/TownsCup.xcodeproj
          workspace-path: ios/Townscup.xcworkspace
          scheme: TownsCup
          configuration: Debug
          output-path: artifacts/TownsCup.ipa
          p12-base64: ${{env.DEVELOPMENT_CERTIFICATE}}
          certificate-password: '1234'
          mobileprovision-base64: ${{env.DEVELOPMENT_PROFILE}}
          code-signing-identity: 'Apple Development'
          team-id: L2QJ5W54YN
          export-method: development

      # - name: Build Archive
      #   run: |
      #     xcodebuild -workspace $WORKSPACE -scheme "TownsCup (Development)" -configuration $CONFIGURATION \
      #     archive -archivePath $ARCHIVE_PATH -allowProvisioningUpdates
      #     PROVISIONING_STYLE="Manual" \
      #     PROVISIONING_PROFILE={$DEVELOPMENT_PROFILE} \
      #     CODE_SIGN_STYLE="Manual" \
      #     CODE_SIGN_IDENTITY={$DEVELOPMENT_CERTIFICATE} \

      # - name: Export Development
      #   run: |
      #     xcodebuild -exportArchive -archivePath $ARCHIVE_PATH -exportPath $EXPORT_PATH . -exportOptionsPlist $PLIST_PATH -allowProvisioningUpdates
      #     PROVISIONING_STYLE="Manual" \
      #     PROVISIONING_PROFILE={$DEVELOPMENT_PROFILE} \
      #     CODE_SIGN_STYLE="Manual" \
      #     CODE_SIGN_IDENTITY={$DEVELOPMENT_CERTIFICATE} \

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: |
            ${{ env.ARTIFACT_PATH }}
      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/DevelopmentProfile.mobileprovision
  deploy:
    needs: [build-ios]
    if: success()
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - uses: actions/actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Upload to App Center Development
        uses: wzieba/AppCenter-Github-Action@v1
        with:
          appName: ${{ env.APP_NAME }}
          token: ${{ env.APP_CENTER_TOKEN }}
          group: ${{ env.TESTING_GROUP }}
          file: ${{ env.UPLOAD_FILE }}
          notifyTesters: false
          debug: false

      - name: Delete Artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
